{"_id":"Ku9HZSKDg4tkFita","name":"Action: Absorb","type":"script","author":"KPVkkpR21c13yy2y","img":"icons/magic/unholy/hand-light-pink.webp","scope":"global","command":"(async () => {\n    async function roll($DC){\n        const skillName = \"Thievery\";\n        const skillKey = \"thi\";\n        const actionSlug = \"absorb\"\n        const actionName = \"Absorb\"\n        \n        const modifiers = []\n        // list custom modifiers for a single roll here\n        //const modifiers = [\n        //new game.pf2e.Modifier('Expanded Healer\\'s Tools', 1, 'item')\n        //];\n        \n        let DC = 10;\n        \n        if($DC === \"AC\"){\n            DC = target.actor.data.data.attributes.ac.value ?? 10;\n        }else {\n            DC = target.actor.saves.will.dc.value ?? 10;\n        }\n        \n        const notes = [...actor.data.data.skills[skillKey].notes]; // add more notes if necessary\n        \n        const options = actor.getRollOptions(['all', 'skill-check', skillKey]);\n        options.push(`action:${actionSlug}`); // add more traits here in new lines\n        \n        game.pf2e.Check.roll(\n        new game.pf2e.CheckModifier(\n            `<b>${actionName}</b> - <p class=\"compact-text\">${skillName } Skill Check</p>`,\n            actor.data.data.skills[skillKey], modifiers ),\n            { actor: actor, type: 'skill-check', options, notes, dc: {value: DC}},\n            event,\n            async (roll) =>{\n                if(roll.data.degreeOfSuccess >= 2){\n                    const ITEM_UUID = \"Compendium.vyk-homebrew.bladecaster.EXtElOSxOGbSfPhG\"; // Effect: Elemental Mana\n                    const source = (await fromUuid(ITEM_UUID)).toObject();\n                    source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n                    const existing = actor.itemTypes.effect.find((e) => e.data.flags.core?.sourceId === ITEM_UUID);\n                    if(!existing) await actor.createEmbeddedDocuments(\"Item\", [source]);\n                }\n            }\n        ); \n    } \n    \n    const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\n    if (actors.length === 0 && game.user.character) actors.push(game.user.character);\n    if (actors.length === 0) {\n        const message = game.i18n.localize(\"PF2E.ErrorMessage.NoTokenSelected\");\n        return ui.notifications.error(message);\n    }\n    actor = actors[0];\n    \n    if(Array.from(game.user.targets).length === 0){\n        ui.notifications.warn(\"You must have a token targetted\");\n        return;\n    }\n    const target = Array.from(game.user.targets)[0];\n    \n    new Dialog({\n        title:`Absorb`,\n        content:`<div>Choose what to target:</div>`,\n        buttons:{\n            ac:{\n                icon: `<i class=\"fas fa-user-shield\"></i>`,\n                label:`Armor Class`,\n                callback: () => roll('AC')\n            },\n            will:{\n                icon: `<i class=\"fas fa-brain\"></i>`,\n                label:`Will DC`,\n                callback: () => roll('WILL DC')\n            },\n            cancel:{\n                icon: `<i class=\"fas fa-times\"></i>`,\n                label: 'Cancel'\n            }\n        }\n    }).render(true);\n})();","folder":null,"sort":0,"permission":{"default":0,"KPVkkpR21c13yy2y":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.MCgo3gwjPjLxhgSV"}}}
